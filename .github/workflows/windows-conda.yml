name: build Wiver for Windows

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
      - v[0-9].[0-9]+.[0-9]+

jobs:
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    strategy:
      max-parallel: 5
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
    - uses: actions/checkout@v4
    - uses: seanmiddleditch/gha-setup-vsdevenv@master

    - name: Setup base conda for Python
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-activate-base: true
        activate-environment: ""
        miniforge-version: latest
        conda-remove-defaults: true
        channels: MaxBo, conda-forge
      env:
        TMPDIR: ${{ runner.TEMP }}
        CONDA_BLD_PATH: env.TMPDIR

    - name: Install dependencies and set channels
      run: |
        (
        mamba install -n base "conda>=23.7" conda-build conda-verify anaconda-client rattler-build twine
        )

    - name: create test environments environment for python < 3.13
      if: ${{ matrix.python-version < '3.13' }}
      run: |
        (
        mamba create -n test-wheels python=${{ matrix.python-version }} numpy pytest-cov pytest-benchmark
        mamba create -n test-conda python=${{ matrix.python-version }} numpy pytest-benchmark
        )

    - name: create test environments for python >= 3.13
      if: ${{ matrix.python-version >= '3.13' }}
      run: |
        (
        mamba create -n test-wheels python-gil python=${{ matrix.python-version }} numpy pytest-cov pytest-benchmark
        mamba create -n test-conda python-gil python=${{ matrix.python-version }} numpy pytest-benchmark
        )

    - name: Build wheel and run tests for wiver
      run: |
        (
        mamba activate test-wheels
        cd wiver
        echo "build wiver from folder %CD%"
        pip install -r requirements.txt
        pip install .
        pip install build
        python -m pytest --pyargs wiver
        python -m build -n .
        echo "### All tests with pip passed! :rocket:" >> $GITHUB_STEP_SUMMARY
        )

    - name: run code coverage
      if: ${{ matrix.python-version == '3.13' }}
      run: |
        (
        conda activate test-wheels
        cd wiver
        pip install -e .
        python setup.py build_ext --force --inplace --define CYTHON_TRACE_NOGIL
        python -m pytest --cov=src --cov-report xml --pyargs wiver
        coverage xml
        echo "### Code Coverage checked! :rocket:" >> $GITHUB_STEP_SUMMARY
        )

    - name: Upload to Codecov
      if: ${{ matrix.python-version == '3.13' }}
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./wiver/coverage.xml
        flags: unittests # optional
        fail_ci_if_error: true # optional (default = false)

    - name: Publish wiver to PyPI
      if: startsWith(github.ref, 'refs/tags/')
      env:
        TWINE_USERNAME: '__token__'
      run: |
        (
        mamba activate base
        twine upload --skip-existing -p ${{ secrets.PYPI_API_TOKEN }} wiver\dist\*
        )

    - name: build wiver for python version
      env:
        CONDA_BLD_PATH: ${{ runner.TEMP }}
        TMPDIR: ${{ runner.TEMP }}
        LIBARCHIVE: C:\Miniconda\Library\bin\archive.dll
      run: |
        (
        conda build --python ${{ matrix.python-version }} --no-test wiver\conda.recipe
        conda install --use-local -n test-conda wiver
        )

    - name: test wiver for python version
      env:
        CONDA_BLD_PATH: ${{ runner.TEMP }}
        TMPDIR: ${{ runner.TEMP }}
      run: |
        (
        mamba activate test-conda
        python -m pytest --pyargs wiver
        echo "### All tests with conda passed! :rocket:" >> $GITHUB_STEP_SUMMARY
        )

    - name: Upload package to conda

      env:
        CONDA_BLD_PATH: ${{ runner.TEMP }}
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_GITHUBACTION_TOKEN }}
        ANACONDA_USERNAME: MaxBo
      if: ${{ env.ANACONDA_TOKEN }}

      run: |
        (
        mamba activate base
        anaconda -t %ANACONDA_TOKEN% upload --skip-existing --user %ANACONDA_USERNAME% %CONDA_BLD_PATH%\win-64\wiver-*.conda
        )

    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
      timeout-minutes: 60
      with:
        detached: true

